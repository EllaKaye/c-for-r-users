---
title: C for R users
author: Ella Kaye
date: 2024-07-10
date-format: long
format: 
  warwickpres-revealjs: 
    title-slide-attributes: 
      data-background-image: warwick-logo-white.png
      data-background-size: 15%
      data-background-position: 100% 0%
---

## About me 

::: {.incremental}
- Research Software Engineer at University of Warwick
- Sustainability and EDI in the R Project
- R user/developer for 10 years
- Learning C for about a year
:::

## What is C and how does it relate to R?

## Why C?

- As R users: 
  - encounter C code when debugging
- As R contributors: 
  - find root cause of bug 
  - propose a patch to the C code to fix a bug
- As R developers:
  - Write efficient, portable code

# R developers {.inverse}

## Limits of R

Sometimes you reach the limits of R:

- Your code is still slow despite optimizing the computational approach and the R implementation
- You could speed up the R code, but it results in very obscure, convoluted code

In these case it can make sense to code parts in C or C++.

## Typical scenarios

- Loops that can’t be vectorized because iterations depend on previous results
- Recursive functions, or problems which involve calling functions millions of times.
- Problems that require advanced data structures and algorithms that R doesn’t provide.

## You *almost certainly* want C++ with Rcpp

- Protects you from many of the historical idiosyncracies of R's C API
- Takes care of memory management
- Provides many useful helper methods

## But you *might* want/need C

- Portability (e.g. can also call from Python)
- Building on other people's C code

# R users {.inverse}

# R contributors {.inverse}

# 3-digit hex case-study {.inverse}

## The original idea

{{< mastodon https://fosstodon.org/@coolbutuseless/110972696890598490 >}}

```{=html}
<!-- needs to be last chunk of presentation otherwise creates an extra slide -->
<!-- requires Quarto v1.3 -->
<!-- tint80 for border, tint20 for title -->
<!-- this should hopefully no longer be necessary in a future version of Quarto -->
<!-- https://github.com/quarto-dev/quarto-cli/issues/5038 -->
<style type="text/css">
div.callout-note {
  border-left-color: #00A9CE !important;
}

div.callout-note.callout-style-default .callout-title {
  background-color: #B3E5F0 !important;
}

div.callout-warning {
  border-left-color: #CB333B !important;
}

div.callout-warning.callout-style-default .callout-title {
  background-color: #EEC3C3 !important;
}

div.callout-tip {
  border-left-color: #6DCDB8 !important;
}

div.callout-tip.callout-style-default .callout-title {
  background-color: #D3F0EB !important;
}

div.callout-important {
  border-left-color: #F1BE48 !important;
}

div.callout-important.callout-style-default .callout-title {
  background-color: #FAECC8 !important;
}

div.callout-caution {
  border-left-color: #E87722 !important;
}

div.callout-caution.callout-style-default .callout-title {
  background-color: #F8D5BC !important;
}
</style>
```
